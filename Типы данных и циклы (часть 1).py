# -*- coding: cp1251 -*-

#Задание 1. Дана переменная, в которой хранится слово из латинских букв. Напишите код, который выводит на экран: среднюю букву, 
#если число букв в слове нечетное; две средних буквы, если число букв четное.

word = list(input('Введите слово: '))
if len(word) % 2 == 0:
  print(word[(len(word)-1)//2:(len(word)+2)//2])
else:
  print(word[0])
  
#Задание 2. Напишите программу, которая последовательно запрашивает у пользователя числа (по одному за раз) и 
#после первого нуля выводит сумму всех ранее введенных чисел.

number = True
sum_ = 0
while number != 0:
   number = int(input('Введите число '))
   sum_ += number
print(sum_)

#Задание 3. Мы делаем MVP dating-сервиса, и у нас есть список парней и девушек. 
#Выдвигаем гипотезу: лучшие рекомендации мы получим, если просто отсортируем имена по алфавиту и 
#познакомим людей с одинаковыми индексами после сортировки! Но мы не будем никого знакомить, если кто-то может остаться без пары:

boys = ['Peter', 'Alex', 'John', 'Arthur', 'Richard', 'Michael']
girls = ['Kate', 'Liza', 'Kira', 'Emma', 'Trisha']

boys = ['Peter', 'Alex', 'John', 'Arthur', 'Richard']
girls = ['Kate', 'Liza', 'Kira', 'Emma', 'Trisha']

import re
b = re.split(r'[,;]\s?', str(boys))
b.sort()
g = re.split(r'[,;]\s?', str(girls))
g.sort()
if len(b) == len(g):
  print(f'Идеальные пары: {list(zip(b, g))}')
else:
  print('Внимание, кто-то может остаться без пары!')
  
#Задание 4. У нас есть список, содержащий информацию о среднедневной температуре в Фаренгейтах за произвольный период по странам 
#(структура данных в примере). Необходимо написать код, который рассчитает среднюю температуру за период в Цельсиях(!) 
#для каждой страны.

countries_temperature = [
    ['Таиланд', [75.2, 77, 78.8, 73.4, 68, 75.2, 77]],
    ['Германия', [57.2, 55.4, 59, 59, 53.6]],
    ['Россия', [35.6, 37.4, 39.2, 41, 42.8, 39.2, 35.6]],
    ['Польша', [50, 50, 53.6, 57.2, 55.4, 55.4]]
]
print('Средняя температура в странах: ')
for element in countries_temperature:
    v = ((sum(element[1]) - (32 * len(element[1]))) / 1.8) / len(element[1])
    print(element[0],'-', round(v,1), 'C')
    
#Задание 5. Имеется список с транспортными номерами. Необходимо написать код, который проверит каждый номер на валидность 
#(1 буква, 3 цифры, 2 буквы, 2-3 цифры). Обратите внимание, что не все буквы кириллического алфавита используются 
#в транспортных номерах.
#Если номер валиден, то вывести его в нужном формавте (пример ниже), а если не валиден — вывести текст. 
#При решении помогут регулярные выражения, с которыми будет знакомство на практике.

import re
car_ids = ['А222ВС96', 'АБ22ВВ193']
for element in car_ids:
    if re.findall(r'\w\d{3}\w{2}\d{2,3}', element):
        print('Номер', element[0:6], 'валиден. Регион', element[6:])
    else:
        print('Номер', element, 'не валиден')   
        
#Задание 6. Дан поток логов по количеству просмотренных страниц для каждого пользователя (пользователь,дата;просмотры). 
#Вам необходимо написать алгоритм, который считает среднее значение просмотров на пользователя. 
#Т. е. надо посчитать отношение суммы всех просмотров к количеству уникальных пользователей. 
#И тут регулярные выражения облегчат немного реализацию.

import re
stream = [
    'user4,2021-01-01;3',
    'user3,2022-01-07;4',
    'user2,2022-03-29;1',
    'user1,2020-04-04;13',
    'user2,2022-01-05;7',
    'user1,2021-06-14;4',
    'user3,2022-07-02;10',
    'user4,2021-03-21;19',
    'user4,2022-03-22;4',
    'user4,2022-04-22;8',
    'user4,2021-05-03;9',
    'user4,2022-05-11;11'
]

stream = [
    'user100,2022-01-01;150',
    'user99,2022-01-07;205',
    'user1001,2022-03-29;81'
]

total_views = sum([int(re.split('[,;]', element)[2]) for element in stream])
no_of_users = len(set([re.split('[,;]', element)[0] for element in stream]))
print(f'Среднее число просмотров на уникального пользователя: {total_views / no_of_users :.2f}')